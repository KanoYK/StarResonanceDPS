name: Build StarResonanceDPS

on:
  push:
    branches: [main]
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    timeout-minutes: 30  # 增加超时时间
    
    env:
      ELECTRON_MIRROR: "https://npmmirror.com/mirrors/electron/"  # 使用国内镜像加速下载
      ELECTRON_BUILDER_CACHE: "${{ github.workspace }}/.cache/electron-builder"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js v18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        
    # 缓存 Electron 和构建工具 - 关键优化点
    - name: Cache Electron binaries
      uses: actions/cache@v4
      with:
        path: |
          ~\AppData\Local\electron\Cache
          ~\AppData\Local\electron-builder\cache
          ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}-v1
        
    # 仅安装必要的全局工具
    - name: Install global dependencies
      run: npm install -g electron-builder@24.18.0 node-gyp
      
    - name: Install project dependencies
      run: npm ci
      
    # 重建原生模块 - 针对 Electron 版本
    - name: Rebuild native modules
      run: |
        npm rebuild --runtime=electron --target=37.2.5 --disturl=https://electronjs.org/headers
        
    # 确保资源目录存在
    - name: Prepare assets directory
      run: |
        mkdir -p assets
        # 如果图标文件不存在则创建占位符
        if not exist assets/icon.ico (echo. > assets/icon.ico)
        
    - name: Build application
      run: npm run build
      
    # 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: StarResonanceDPS_${{ github.run_id }}
        path: |
          dist/*.exe
          dist/*.blockmap
          dist/*.yml
        retention-days: 7
